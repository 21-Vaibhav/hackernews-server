name: Deploy to Azure Container Apps

on:
  push:
    branches:
      - master  # Change this to your deployment branch if needed
  workflow_dispatch:

env:
  CONTAINER_NAME: hacker-env  # Ensure this matches the ACR repository name
  RESOURCE_GROUP: HackerNews
  ACR_NAME: hackernews1si21is057
  ACA_NAME: hacker-env
  REGION: centralindia

permissions:
  contents: read
  id-token: write

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Azure Secrets
        run: |
          echo '${{ secrets.AZURE_GITHUB_ACTIONS }}' > azure_secrets.json
          echo "AZURE_CLIENT_ID=$(jq -r .clientId azure_secrets.json)" >> $GITHUB_ENV
          echo "AZURE_TENANT_ID=$(jq -r .tenantId azure_secrets.json)" >> $GITHUB_ENV
          echo "AZURE_SUBSCRIPTION_ID=$(jq -r .subscriptionId azure_secrets.json)" >> $GITHUB_ENV
          echo "AZURE_CLIENT_SECRET=$(jq -r .clientSecret azure_secrets.json)" >> $GITHUB_ENV

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry (ACR)
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest .

      - name: Push Docker Image to ACR
        run: |
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest

  deploy:
    name: Deploy to Azure Container Apps
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Azure Secrets
        run: |
          echo '${{ secrets.AZURE_GITHUB_ACTIONS }}' > azure_secrets.json
          echo "AZURE_CLIENT_ID=$(jq -r .clientId azure_secrets.json)" >> $GITHUB_ENV
          echo "AZURE_TENANT_ID=$(jq -r .tenantId azure_secrets.json)" >> $GITHUB_ENV
          echo "AZURE_SUBSCRIPTION_ID=$(jq -r .subscriptionId azure_secrets.json)" >> $GITHUB_ENV
          echo "AZURE_CLIENT_SECRET=$(jq -r .clientSecret azure_secrets.json)" >> $GITHUB_ENV

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name ${{ env.ACA_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_NAME }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest \
            --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL }} \
                           DIRECT_URL=${{ secrets.DIRECT_URL }} \
                           JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --output none
